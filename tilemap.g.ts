// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex`1e000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000050606060700000000000507000000000000000000000000000005070000000000000000000000000000000000000800000000000000000000000000000000000000050607000000000000050700000000000506070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020304010101010101010101010101010101010101010101010101010101`, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . 2 2 2 2 2 . . . . . 2 2 . . . . . . 
. . . . . . . . 2 2 . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 2 2 2 . . . . . . 2 2 . 
. . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.swamp.swampTile0,sprites.builtin.forestTiles21,sprites.builtin.forestTiles22,sprites.builtin.forestTiles23,sprites.swamp.swampTile4,sprites.swamp.swampTile7,sprites.swamp.swampTile5,sprites.dungeon.collectibleBlueCrystal], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex`1e000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000505050000000505000000000000000000050505000000000000000505000000000000000000000000000000050500000000000000000005000000000000000005000000000000000000000000000000000000050000000000000000000000000000000505050500000000000000000000000000000000000000000000000000000000000000000000000000020304010101010101010101010101010101010101010101010101010101`, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . 2 2 2 . . . 2 2 . . . . . . . . . 2 2 2 
. . . . . . . 2 2 . . . . . . . . . . . . . . . 2 2 . . . . 
. . . . . 2 . . . . . . . . 2 . . . . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . . . . 2 2 2 2 . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.oceanDepths11,sprites.builtin.oceanDepths0,sprites.builtin.oceanDepths1,sprites.builtin.oceanDepths2,sprites.builtin.oceanSand0,sprites.dungeon.chestClosed], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`1e000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000050400000000000006000000000000060000000000000000000000040500000000000005050000000000000000000000000000000000000000000000000000000000000000000006060600000000000007000004050400000000000000040000000000000000000000000000060606000000000000000000000000000000000000000000000000000000000000010203030303030303030303030303030303030303030303030303030303`, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . 2 2 . . . . . . 2 . . . . . . 2 . . . . . 
. . . . . . 2 2 . . . . . . 2 2 . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 2 2 2 . . . . . . . 
. . 2 2 2 . . . . . . . 2 . . . . . . . . . . . . . . 2 2 2 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.crowd0,sprites.builtin.crowd1,sprites.dungeon.hazardLava1,sprites.castle.rock0,sprites.castle.rock1,sprites.castle.rock2,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
